class Solution {
public:
  int lengthOfLongestSubstring(string s) {
    if (s.empty())
      return 0;
    const int len = s.length();

    vector<int> nexts(len);
    for (int i = 0; i < len; i++) {
      int next = len - 1;
      for (int j = i + 1; j < len; j++) {
        if (s[j] == s[i]) {
          next = j - 1;
          break;
        }
      }
      nexts[i] = next;
    }

    int longest = 1;
    for (int i = 0; i < len; i++) {
      int l = nexts[i];
      if (l == i)
        continue;
      for (int j = i + 1; j <= l; j++) {
        if (nexts[j] < l)
          l = nexts[j];
      }
      if (l - i + 1 > longest)
        longest = l - i + 1;
    }
    return longest;
  }
};