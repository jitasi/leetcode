// Runtime: 24 ms, faster than 55.20% of C++ online submissions for Shortest
// Path Visiting All Nodes. Memory Usage: 12.6 MB, less than 75.82% of C++
// online submissions for Shortest Path Visiting All Nodes.
​ class Solution {
 public:
   int shortestPathLength(vector<vector<int>> &graph) {
       const int nodes = graph.size();
       if (nodes <= 1) return 0;
    ​
    vector<vector<int>> dp(1 << nodes, vector<int>(nodes, nodes * nodes));
       for (int i = 0; i < nodes; i++) dp[1 << i][i] = 0;
       
    for (int i = 0; i < (1 << nodes); i++) {
           bool repeat = true;
           while (repeat) {
               repeat = false;
               for (int last = 0; last < nodes; last++) {
                   for (const int next : graph[last]) {
                       const int next_visited = i | (1 << next);
                       if (dp[i][last] + 1 < dp[next_visited][next]) {
                           dp[next_visited][next] = dp[i][last] + 1;
                           if (i == next_visited) repeat = true;
                       
            }
                   
          }
               
        }
           
      }
       
    }
    ​
    int ans = nodes * nodes;
       for (const int d : dp[(1 << nodes) - 1])
      ans = std::min(d, ans);
       return ans;
  }
};
