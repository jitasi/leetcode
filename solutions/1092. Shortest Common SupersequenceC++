// Runtime: 8 ms, faster than 99.83% of C++ online submissions for Shortest
// Common Supersequence. Memory Usage: 13 MB, less than 100.00% of C++ online
// submissions for Shortest Common Supersequence.
​ class Solution {
public:
   string shortestCommonSupersequence(string str1, string str2) {
       const int len1 = str1.size();
       const int len2 = str2.size();
       int dp[len1 + 1][len2 + 1];
       for (int i = 0; i <= len1; i++)
      for (int j = 0; j <= len2; j++)
        dp[i][j] = 0;
       
    for (int i = 1; i <= len1; i++) {
           for (int j = 1; j <= len2; j++) {
               if (str1[i - 1] == str2[j - 1])
          dp[i][j] = dp[i - 1][j - 1] + 1;
               else          dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);
           
      }
       
    }
       
    string ans;
       int i = len1;
       int j = len2;
       while (i != 0 || j != 0) {
           if (i == 0) {
               ans.push_back(str2[--j]);
           
      }
      else if (j == 0) {
               ans.push_back(str1[--i]);
           
      }
      else if (str1[i - 1] == str2[j - 1]) {
               ans.push_back(str1[--i]);
               j--;
           
      }
      else if (dp[i - 1][j] > dp[i][j - 1]) {
               ans.push_back(str1[--i]);
           
      }
      else {
               ans.push_back(str2[--j]);
           
      }
          
  
    }
       reverse(ans.begin(), ans.end());
       return ans;
  }
};
