class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& A) {
      if (A.size() == 0) return 0;
      
      for (int i = 1; i < A.size(); i++) {
        for (int j = 0; j < A[0].size(); j++) {
          int m = A[i - 1][j];
          if (j > 0 && A[i - 1][j - 1] < m) {
            m = A[i - 1][j - 1];
          }
          if (j < A[0].size() - 1 && A[i - 1][j + 1] < m) {
            m = A[i - 1][j + 1];
          }
          A[i][j] += m;
        }
      }
      
      auto it = std::min_element(A[A.size() - 1].begin(), A[A.size() - 1].end());
      return *it;
    }
};