// Runtime: 4 ms, faster than 91.31% of C++ online submissions for Find Minimum
// in Rotated Sorted Array. Memory Usage: 8.7 MB, less than 45.03% of C++ online
// submissions for Find Minimum in Rotated Sorted Array.
​ class Solution {
 public:
   int findMin(vector<int> &nums) {
       int p = 0;
       int q = nums.size() - 1;
       
    int ans = nums[0];
       while (p < q) {
           const int mid = p + (q - p) / 2;
      ​
      if (nums[mid] > nums[p]) {
                 // 4,5,6,7,0,1,2
          // p . m       q
        p = mid + 1;
               ans = min(ans, nums[p]);
           
      }
      else if (nums[mid] < nums[p]) {
                 // 4,5,6,7,0,1,2
          // p .       m q    
        q = mid - 1;
               ans = min(ans, nums[mid]);
               
    
      }
      else if (nums[mid] > nums[q]) {
                 // 4,4,4,4,5,6,7
          // p .     m   q        
        p = mid + 1;
               ans = min(ans, nums[q]);
           
      }
      else if (nums[mid] < nums[q]) {
                 // 4,4,4,4,5,6,7
          // p .   m     q 
        ans = min(ans, nums[mid]);
         
        break;
           
      }
       
    }
       return ans;
  }
};
