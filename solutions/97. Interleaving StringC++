// Runtime: 4 ms, faster than 94.92% of C++ online submissions for Interleaving
// String. Memory Usage: 8.9 MB, less than 27.05% of C++ online submissions for
// Interleaving String.

class Solution {
public:
  bool isInterleave(string s1, string s2, string s3) {
    const int len1 = s1.size();
    const int len2 = s2.size();
    if (len1 + len2 != s3.size())
      return false;

    vector<vector<bool>> dp(len1 + 1, vector<bool>(len2 + 1, false));

    dp[0][0] = true;
    for (int j = 1; j <= len2; j++) {
      dp[0][j] = dp[0][j - 1] && (s2[j - 1] == s3[j - 1]);
    }

    for (int i = 1; i <= len1; i++) {
      dp[i][0] = dp[i - 1][0] && (s1[i - 1] == s3[i - 1]);
      for (int j = 1; j <= len2; j++) {
        dp[i][j] = (dp[i - 1][j] && (s1[i - 1] == s3[i + j - 1])) ||
                   (dp[i][j - 1] && (s2[j - 1] == s3[i + j - 1]));
      }
    }

    return dp[len1][len2];
  }
};