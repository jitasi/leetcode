// Runtime: 20 ms, faster than 50.61% of C++ online submissions for Insert Interval.
// Memory Usage: 12.5 MB, less than 12.73% of C++ online submissions for Insert Interval.


class Solution {
public:
  vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
    const int n = intervals.size();
    
    vector<vector<int>> res;
    int cur = 0;
    while (cur < n && intervals[cur][1] < newInterval[0]) {
      res.push_back(intervals[cur++]);
    }
    while (cur < n && intervals[cur][0] <= newInterval[1]) {
      newInterval[0] = min(newInterval[0], intervals[cur][0]);
      newInterval[1] = max(newInterval[1], intervals[cur][1]);
      ++cur;
    }
    res.push_back(newInterval);
    while (cur < n) {
        res.push_back(intervals[cur++]);
    }
    return res;
  }
};