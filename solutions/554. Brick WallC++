// Runtime: 48 ms, faster than 98.05% of C++ online submissions for Brick Wall.
// Memory Usage: 19.2 MB, less than 88.11% of C++ online submissions for Brick
// Wall.

class Solution {
public:
  int leastBricks(vector<vector<int>> &wall) {
    unordered_map<int, int> m;
    for (const auto &w : wall) {
      int c = 0;
      for (int i = 0; i < w.size() - 1; i++) {
        c += w[i];
        if (m.count(c) == 0)
          m[c] = 1;
        else
          m[c]++;
      }
    }

    if (m.empty())
      return wall.size();

    const auto it =
        max_element(m.begin(), m.end(),
                    [](const pair<int, int> &p1, const pair<int, int> &p2) {
                      return p1.second < p2.second;
                    });
    //    cout << it->first << ", " << it->second << endl;
    return wall.size() - it->second;
  }
};