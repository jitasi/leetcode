// Runtime: 24 ms, faster than 48.92% of C++ online submissions for Shopping
// Offers. Memory Usage: 22.4 MB, less than 5.54% of C++ online submissions for
// Shopping Offers.
​ class Solution {
public:
   int items;
   
  int opt(vector<vector<int>> &special, vector<int> needs, int from,
           int cur_price) {
       if (from >= special.size()) return cur_price;
       
    bool valid = true;
       for (int i = 0; i < items; i++) 
      if (special[from][i] > needs[i]) {
             valid = false;
             break;
         
    }
       if (!valid) return opt(special, needs, from + 1, cur_price);
       
    const int price1 = opt(special, needs, from + 1, cur_price);
       for (int i = 0; i < items; i++) needs[i] -= special[from][i];
       const int price2 =
        opt(special, needs, from, cur_price - special[from][items]);
       return min(price1, price2);
  }
   
  int shoppingOffers(
    vector<int> &price, vector<vector<int>> &special, vector<int> &needs) {
       items = price.size();
       if (items == 0) return 0;
