class Solution {
public:
  int maxProfit(vector<int> &prices) {
    if (prices.size() <= 1)
      return 0;

    vector<int> profits_fwd(prices.size(), 0);
    int lowest = prices[0];
    int profit = 0;
    for (int i = 1; i < prices.size(); i++) {
      if (lowest > prices[i]) {
        lowest = prices[i];
        profits_fwd[i] = profit;
        continue;
      }
      const int diff = prices[i] - lowest;
      if (diff > profit)
        profit = diff;
      profits_fwd[i] = profit;
    }

    vector<int> profits_bwd(prices.size(), 0);
    int highest = prices[prices.size() - 1];
    profit = 0;
    for (int i = prices.size() - 1; i >= 0; i--) {
      if (highest < prices[i]) {
        highest = prices[i];
        profits_bwd[i] = profit;
        continue;
      }
      const int diff = highest - prices[i];
      if (diff > profit)
        profit = diff;
      profits_bwd[i] = profit;
    }

    profit = 0;
    for (int i = 0; i < prices.size(); i++) {
      const int two = profits_fwd[i] + profits_bwd[i];
      if (two > profit)
        profit = two;
    }

    return profit;
  }
};