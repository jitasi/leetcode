class Solution {
 public:
  void subsetsWithDup(vector<int> &nums, int from, vector<int> cur,
                      vector<vector<int>> &ans) {
    if (from >= nums.size()) return;
    for (int i = from; i < nums.size(); i++) {
      if (i > from && nums[i] == nums[i - 1]) continue;
      cur.push_back(nums[i]);
      ans.push_back(cur);
      subsetsWithDup(nums, i + 1, cur, ans);
      cur.pop_back();
    }
  }

  vector<vector<int>> subsetsWithDup(vector<int> &nums) {
    vector<vector<int>> ans;
    vector<int> cur;
    sort(nums.begin(), nums.end());
    ans.push_back(cur);
    subsetsWithDup(nums, 0, cur, ans);
    return ans;
  }
};