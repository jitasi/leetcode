// Runtime: 4 ms, faster than 99.65% of C++ online submissions for Knight
// Probability in Chessboard. Memory Usage: 9.1 MB, less than 80.03% of C++
// online submissions for Knight Probability in Chessboard.

class Solution {
public:
  double knightProbability(int N, int K, int r, int c) {
    const int dir[8][2] = {{-1, -2}, {1, -2}, {-1, 2}, {1, 2},
                           {-2, -1}, {2, -1}, {-2, 1}, {2, 1}};

    vector<vector<double>> prev(N, vector<double>(N, 0.0));
    vector<vector<double>> cur(N, vector<double>(N, 1.0));

    for (int k = 0; k < K; k++) {
      prev.swap(cur);
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          double p = 0.0;
          for (int d = 0; d < 8; d++) {
            const int x = i + dir[d][0];
            const int y = j + dir[d][1];

            if (x >= 0 && x < N && y >= 0 && y < N)
              p += prev[x][y];
          }
          cur[i][j] = p / 8.0;
        }
      }
    }

    return cur[r][c];
  }
};