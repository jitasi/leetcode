class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
      if (intervals.size() <= 1) return intervals;      
      std::sort(intervals.begin(), intervals.end(), 
                [](const vector<int>& a, const vector<int>& b) {
                  return (a[0] == b[0]) ? a[1] > b[1] : a[0] < b[0];
      });
      
      int last_pos = 0;
      for (int i = 1; i < intervals.size(); i++) {
        auto& last = intervals[last_pos];
        if (last[1] < intervals[i][0]) {
          last_pos++;
          intervals[last_pos].swap(intervals[i]);
        } else if (last[1] < intervals[i][1]) {
          last[1] = intervals[i][1];
        }
      }
      intervals.resize(last_pos+1);
      return intervals;
    }
};