/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
      if (head == nullptr) return nullptr;
      
      ListNode *p = head;
      ListNode *q = head;
      
      int c = 0;
      
      do {
        c++;
        p = p->next;
        if (q->next == nullptr) return nullptr;
        q = q->next;
        if (q->next == nullptr) return nullptr;
        q = q->next;
      } while (p != q);
      cout << c << endl;
      
      q = head;
      while (c != 0) {
        q = q->next;
        c--;
      }
      
      p = head;
      while (p != q) {
        p = p->next;
        q = q->next;
      }
      
      return p;
    }
};