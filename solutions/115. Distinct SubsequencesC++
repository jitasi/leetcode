// Runtime: 8 ms, faster than 79.68% of C++ online submissions for Distinct
// Subsequences. Memory Usage: 13.3 MB, less than 53.12% of C++ online
// submissions for Distinct Subsequences.
​ class Solution {
public:
   int numDistinct(string s, string t) {
       long dp[t.size() + 1][s.size() + 1];
       for (int i = 0; i <= s.size(); ++i) dp[0][i] = 1;
       
    for (int i = 1; i <= t.size(); ++i) dp[i][0] = 0;
       
    for (int i = 1; i <= t.size(); ++i) {
           for (int j = 1; j <= s.size(); ++j) {
               dp[i][j] =
            dp[i][j - 1] + (t[i - 1] == s[j - 1] ? dp[i - 1][j - 1] : 0);
           
      }
       
    }
       return dp[t.size()][s.size()];
  }
  /*
    void numDistinct(const string& s, const string& t, int start_s, int start_t,
   int& cnt) {    if (start_t == t.size()) {      cnt++;      return;    }    if
   (start_s == s.size()) return;        if (s[start_s] == t[start_t])
   numDistinct(s, t, start_s + 1, start_t + 1, cnt);    numDistinct(s, t,
   start_s + 1, start_t, cnt);  }    int numDistinct(string s, string t) {  
    int cnt = 0;    numDistinct(s, t, 0, 0, cnt);    return cnt;  }
  */
};
