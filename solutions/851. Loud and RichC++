// Runtime: 116 ms, faster than 57.76% of C++ online submissions for Loud and Rich.
// Memory Usage: 41.3 MB, less than 12.92% of C++ online submissions for Loud and Rich.
​
class Solution {
public:
  vector<unordered_set<int>> rich_graph;
  vector<int> ans;
  
  int helper(vector<int>& quiet, int i) {
    int r = i;
    stack<int> s;
    s.push(i);
    while (!s.empty()) {
      int cur = s.top();
      s.pop();
      if (ans[cur] != -1) {
        if (quiet[ans[cur]] < quiet[r]) r = ans[cur];
        continue;
      }
      
      if (quiet[cur] < quiet[r]) r = cur;
      for (int n : rich_graph[cur]) s.push(n);
    }
    return r;
  }
  
  vector<int> loudAndRich(vector<vector<int>>& richer, vector<int>& quiet) {
    const int ppls = quiet.size();
    
    rich_graph.resize(ppls);
    for (const auto& r : richer) rich_graph[r[1]].insert(r[0]);
    
    ans.resize(ppls, -1);
    for (int i = 0; i < ppls; i++) {
      if (ans[i] != -1) continue;
      ans[i] = helper(quiet, i);
    }
    
    return ans;
  }
};
