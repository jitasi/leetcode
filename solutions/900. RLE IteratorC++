// Runtime: 8 ms, faster than 92.41% of C++ online submissions for RLE Iterator.
// Memory Usage: 10.4 MB, less than 5.16% of C++ online submissions for RLE
// Iterator.

class RLEIterator {
 public:
  vector<int> arr;
  int pos;
  int cur;

  RLEIterator(vector<int> &A) {
    arr = A;
    pos = 0;
    cur = 0;
  }

  int next(int n) {
    cur += n;
    while (pos < arr.size() && cur > arr[pos]) {
      cur -= arr[pos];
      pos += 2;
    }
    if (pos == arr.size()) return -1;
    return arr[pos + 1];
  }
};

/**
 * Your RLEIterator object will be instantiated and called as such:
 * RLEIterator* obj = new RLEIterator(A);
 * int param_1 = obj->next(n);
 */