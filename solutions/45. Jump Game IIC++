// Runtime: 12 ms, faster than 90.00% of C++ online submissions for Jump Game II.
// Memory Usage: 10.6 MB, less than 35.46% of C++ online submissions for Jump 

class Solution {
public:
  int jump(vector<int>& nums) {
    const int len = nums.size();
    if (len == 1) return 0;
    
    deque<pair<int, int>> dq;  // idx, steps
    
    dq.push_front({0, 0});
    
    for (int i = 0; i < len; i++) {
      while (!dq.empty() && dq.front().first < i) {
        dq.pop_front();
      }
      const int steps = dq.front().second + 1;
      const int pos = i + nums[i];
      if (pos >= len - 1) return steps;
      while (!dq.empty() && dq.back().second == steps && dq.back().first < pos) {
        dq.pop_back();        
      }
      if (dq.back().first < pos) {
        dq.push_back({pos, steps});
      }
    }
    return -1;
  }
};