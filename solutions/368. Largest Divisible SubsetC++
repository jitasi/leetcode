// Runtime: 24 ms, faster than 94.75% of C++ online submissions for Largest
// Divisible Subset. Memory Usage: 8.8 MB, less than 77.35% of C++ online
// submissions for Largest Divisible Subset.

class Solution {
public:
  vector<int> largestDivisibleSubset(vector<int> &nums) {
    const int len = nums.size();
    if (len == 0)
      return {};
    if (len == 1)
      return nums;

    sort(nums.begin(), nums.end());

    vector<int> dp_len(len, 0);
    vector<int> dp_next(len, -1);
    int max_len = 0;
    int max_start;
    for (int i = len - 1; i >= 0; i--) {
      for (int j = i; j < len; j++) {
        if (nums[j] % nums[i] != 0)
          continue;
        if (dp_len[i] < dp_len[j] + 1) {
          dp_len[i] = dp_len[j] + 1;
          dp_next[i] = j;
          if (max_len < dp_len[i]) {
            max_len = dp_len[i];
            max_start = i;
          }
        }
      }
    }

    vector<int> ans(max_len);
    for (int i = 0; i < max_len; i++) {
      ans[i] = nums[max_start];
      max_start = dp_next[max_start];
    }
    return ans;
  }
};