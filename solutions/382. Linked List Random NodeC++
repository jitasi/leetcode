// Runtime: 56 ms, faster than 7.05% of C++ online submissions for Linked List
// Random Node. Memory Usage: 16.3 MB, less than 57.48% of C++ online
// submissions for Linked List Random Node.
​
    /**
     * Definition for singly-linked list.
     * struct ListNode {
     *     int val;
     *     ListNode *next;
     *     ListNode(int x) : val(x), next(NULL) {}
     * };
     */
    class Solution {
public:
     ListNode *h;
   
    /** @param head The linked list's head.
         Note that the head is guaranteed to be not null, so it contains at
  least one node. */
    Solution(ListNode *head) {
           h = head;
     
  }
     
    /** Returns a random node's value. */
    int getRandom() {
         int cnt = 2;
         ListNode *cur = h;
         int ret = cur->val;
         cur = cur->next;
         while (cur != nullptr) {
             if (random() % cnt == 0) ret = cur->val;
            
        cur = cur->next;
             cnt++;
         
    }
         return ret;
     
  }
};
​
    /**
     * Your Solution object will be instantiated and called as such:
     * Solution* obj = new Solution(head);
     * int param_1 = obj->getRandom();
     */
