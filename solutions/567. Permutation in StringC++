// Runtime: 8 ms, faster than 97.59% of C++ online submissions for Permutation
// in String. Memory Usage: 9.5 MB, less than 59.44% of C++ online submissions
// for Permutation in String.
​ class Solution {
 public:
   bool checkInclusion(string s1, string s2) {
       vector<int> target_cnts(26, 0);
       int target_chars = 0;
       for (const char ch : s1) {
           target_cnts[ch - 'a']++;
           if (target_cnts[ch - 'a'] == 1) target_chars++;
       
    }
       
    vector<int> wdm_cnts(26, 0);
       int wdm_chars = 0;
       int left = 0;
       for (int k = 0; k < s2.size(); k++) {
           const int idx = s2[k] - 'a';
           if (target_cnts[idx] == 0) {
               wdm_chars = 0;
               fill(wdm_cnts.begin(), wdm_cnts.end(), 0);
               left = k + 1;
               continue;
           
      }
      ​
      if (target_cnts[idx] == wdm_cnts[idx]) {
               while (s2[left] != s2[k]) {
                   wdm_cnts[s2[left] - 'a']--;
                   if (wdm_cnts[s2[left] - 'a'] == 0) wdm_chars--;
                   left++;
               
        }
