// Runtime: 8 ms, faster than 27.80% of C++ online submissions for Unique Paths
// II. Memory Usage: 9.3 MB, less than 47.47% of C++ online submissions for
// Unique Paths II.

class Solution {
public:
  int uniquePathsWithObstacles(vector<vector<int>> &obstacleGrid) {
    const int rows = obstacleGrid.size();
    if (rows == 0)
      return 0;
    const int cols = obstacleGrid[0].size();
    if (cols == 0)
      return 0;
    if (obstacleGrid[0][0] == 1)
      return 0;

    unsigned int dp[rows][cols];
    dp[0][0] = 1;
    for (int i = 1; i < rows; i++) {
      if (obstacleGrid[i][0] != 1)
        dp[i][0] = dp[i - 1][0];
      else
        dp[i][0] = 0;
    }
    for (int j = 1; j < cols; j++) {
      if (obstacleGrid[0][j] != 1)
        dp[0][j] = dp[0][j - 1];
      else
        dp[0][j] = 0;
    }

    for (int i = 1; i < rows; i++) {
      for (int j = 1; j < cols; j++) {
        if (obstacleGrid[i][j] != 1) {
          dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
        } else {
          dp[i][j] = 0;
        }
      }
    }

    return dp[rows - 1][cols - 1];
  }
};