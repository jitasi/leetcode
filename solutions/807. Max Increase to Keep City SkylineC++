class Solution {
public:
  int maxIncreaseKeepingSkyline(vector<vector<int>> &grid) {
    if (grid.empty() || grid[0].empty())
      return 0;

    vector<int> top_botom(grid[0].size(), 0);
    vector<int> left_right(grid.size(), 0);
    for (int i = 0; i < grid.size(); i++) {
      for (int j = 0; j < grid[0].size(); j++) {
        if (left_right[i] < grid[i][j])
          left_right[i] = grid[i][j];
        if (top_botom[j] < grid[i][j])
          top_botom[j] = grid[i][j];
      }
    }

    int ret = 0;
    for (int i = 0; i < grid.size(); i++) {
      for (int j = 0; j < grid[0].size(); j++) {
        ret += (min(left_right[i], top_botom[j]) - grid[i][j]);
      }
    }

    return ret;
  }
};