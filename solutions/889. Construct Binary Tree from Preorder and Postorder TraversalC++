// Runtime: 16 ms, faster than 51.04% of C++ online submissions for Construct
// Binary Tree from Preorder and Postorder Traversal. Memory Usage: 12.8 MB,
// less than 56.05% of C++ online submissions for Construct Binary Tree from
// Preorder and Postorder Traversal.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
  TreeNode *helper(vector<int> &pre, vector<int> &post, int pre_from,
                   int pre_to, int post_from, int post_to) {
    //    cout << pre_from << ", " << pre_to << ", " << post_from << ", " <<
    //    post_to << endl;
    if (pre_from > pre_to)
      return nullptr;
    if (pre_from == pre_to)
      return new TreeNode(pre[pre_from]);

    TreeNode *root = new TreeNode(pre[pre_from]);
    int i = post_from;
    for (; i <= post_to; i++) {
      if (pre[pre_from + 1] == post[i])
        break;
    }
    root->left = helper(pre, post, pre_from + 1, pre_from + i - post_from + 1,
                        post_from, i);
    root->right = helper(pre, post, pre_from + i - post_from + 2, pre_to, i + 1,
                         post_to - 1);
    return root;
  }

  TreeNode *constructFromPrePost(vector<int> &pre, vector<int> &post) {
    return helper(pre, post, 0, pre.size() - 1, 0, post.size() - 1);
  }
};