class Solution {
 public:
  bool checkSubarraySum(vector<int> &nums, int k) {
    if (nums.size() <= 1) return false;

    vector<int> prefix_sum(nums.size() + 1);
    prefix_sum[0] = 0;
    for (int i = 0; i < nums.size(); i++) {
      prefix_sum[i + 1] = prefix_sum[i] + nums[i];
    }

    for (int i = 0; i < nums.size() - 1; i++) {
      for (int j = i + 2; j < nums.size() + 1; j++) {
        int d = prefix_sum[j] - prefix_sum[i];
        // cout << i << "," << j << "=" << d << endl;
        if (k == 0 && d == 0) return true;
        if (k != 0 && d % k == 0) return true;
      }
    }

    return false;
  }
};