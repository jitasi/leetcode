// Runtime: 32 ms, faster than 9.48% of C++ online submissions for Maximum Nesting Depth of Two Valid Parentheses Strings.
// Memory Usage: 9.3 MB, less than 100.00% of C++ online submissions for Maximum Nesting Depth of Two Valid Parentheses Strings.
​
class Solution {
public:
  vector<int> maxDepthAfterSplit(string seq) {
    vector<int> ans(seq.size(), 0);
    // always l_a >= l_b 
    int l_a = 0;
    int l_b = 0;
    for (int i = 0; i < seq.size(); i++) {
      if (seq[i] == '(') {
        if (l_a == l_b) {
          l_a++;
        } else {
          l_b++;
          ans[i] = 1;
        }
      } else {
        if (l_a > l_b) {
          l_a--;
        } else {
          l_b--;
          ans[i] = 1;
        }
      }
    }
    return ans;
  }
};
