/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
 public:
  ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
    ListNode *out = new ListNode(0);
    ListNode *p = nullptr;
    int carry = 0;
    while (l1 != nullptr && l2 != nullptr) {
      if (p != nullptr) {
        p->next = new ListNode(0);
        p = p->next;
      } else {
        p = out;
      }
      int sum = l1->val + l2->val + carry;
      carry = sum / 10;
      p->val = sum % 10;
      l1 = l1->next;
      l2 = l2->next;
    }
    ListNode *large = nullptr;
    if (l1 != nullptr) large = l1;
    if (l2 != nullptr) large = l2;
    while (large != nullptr) {
      int sum = carry + large->val;
      carry = sum / 10;
      p->next = new ListNode(sum % 10);
      p = p->next;
      large = large->next;
    }

    if (carry > 0) {
      p->next = new ListNode(carry);
    }
    return out;
  }
};